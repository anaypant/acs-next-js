{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anayp/Documents/acs-next-js/app/utils/supabase/server.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\nexport const createServerClient = () => {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\n  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\n  if (!supabaseUrl || !supabaseServiceKey) {\r\n    throw new Error('Missing Supabase environment variables');\r\n  }\r\n\r\n  return createClient(supabaseUrl, supabaseServiceKey);\r\n};\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,qBAAqB;IAChC,MAAM;IACN,MAAM,qBAAqB,QAAQ,GAAG,CAAC,yBAAyB;IAEhE,IAAI,CAAC,eAAe,CAAC,oBAAoB;QACvC,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO,CAAA,GAAA,oQAAA,CAAA,eAAY,AAAD,EAAE,aAAa;AACnC"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/anayp/Documents/acs-next-js/app/api/auth/callback/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport { createServerClient } from '@/app/utils/supabase/server';\r\n\r\nexport async function GET(request: Request) {\r\n  const url = new URL(request.url);\r\n  const code = url.searchParams.get('code');\r\n  const next = url.searchParams.get('next') ?? '/';\r\n  const origin = url.origin;\r\n\r\n  if (code) {\r\n    // Initialize Supabase client\r\n    const supabase = createServerClient();\r\n\r\n    // Exchange the code for a session\r\n    const { error } = await supabase.auth.exchangeCodeForSession(code);\r\n\r\n    if (!error) {\r\n      const forwardedHost = request.headers.get('x-forwarded-host');\r\n      const isLocalEnv = process.env.NODE_ENV === 'development';\r\n\r\n      if (isLocalEnv) {\r\n        // No load balancer in local environment\r\n        return NextResponse.redirect(`${origin}${next}`);\r\n      } else if (forwardedHost) {\r\n        // Use X-Forwarded-Host for production\r\n        return NextResponse.redirect(`https://${forwardedHost}${next}`);\r\n      } else {\r\n        return NextResponse.redirect(`${origin}${next}`);\r\n      }\r\n    }\r\n\r\n    console.error('Supabase Auth error:', error.message);\r\n  }\r\n\r\n  // Redirect to an error page if the code is invalid or missing\r\n  return NextResponse.redirect(`${origin}/auth/auth-code-error`);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;IAC/B,MAAM,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC;IAClC,MAAM,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,WAAW;IAC7C,MAAM,SAAS,IAAI,MAAM;IAEzB,IAAI,MAAM;QACR,6BAA6B;QAC7B,MAAM,WAAW,CAAA,GAAA,oIAAA,CAAA,qBAAkB,AAAD;QAElC,kCAAkC;QAClC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,sBAAsB,CAAC;QAE7D,IAAI,CAAC,OAAO;YACV,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC;YAC1C,MAAM,aAAa,oDAAyB;YAE5C,wCAAgB;gBACd,wCAAwC;gBACxC,OAAO,+PAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,GAAG,SAAS,MAAM;YACjD,OAAO;;YAKP;QACF;QAEA,QAAQ,KAAK,CAAC,wBAAwB,MAAM,OAAO;IACrD;IAEA,8DAA8D;IAC9D,OAAO,+PAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,GAAG,OAAO,qBAAqB,CAAC;AAC/D"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}